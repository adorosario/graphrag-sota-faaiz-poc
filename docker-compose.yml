# =====================
# docker-compose.yml
# =====================

# GraphRAG Docker Compose Configuration
# Secure version - all passwords from .env file

services:
  # Neo4j Database
  neo4j:
    image: neo4j:5.15-community
    container_name: graphrag-neo4j
    ports:
      - "127.0.0.1:7474:7474"  # HTTP for browser
      - "127.0.0.1:7687:7687"  # Bolt protocol
    environment:
      # Neo4j Authentication - NO DEFAULTS, must be in .env
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      
      # Memory settings optimized
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=1024m
      - NEO4J_server_memory_pagecache_size=1024m
      
      # Configuration
      - NEO4J_server_config_strict__validation_enabled=false
      - NEO4J_db_transaction_timeout=30s
      - NEO4J_db_lock_acquisition_timeout=10s
      
      # Network configuration
      - NEO4J_server_default__listen__address=0.0.0.0
      
      # Advertised addresses for browser access
      - NEO4J_server_bolt_advertised__address=:7687
      - NEO4J_server_http_advertised__address=:7474
      
      # CORS and browser settings
      - NEO4J_browser_remote__content__hostname__whitelist=*
      - NEO4J_browser_allow__outgoing__connections=true
      
      # Connector settings
      - NEO4J_server_bolt_enabled=true
      - NEO4J_server_http_enabled=true
      
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - graphrag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2500M
        reservations:
          memory: 2000M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # GraphRAG Application
  graphrag-app:
    build:
      context: .
      dockerfile: Dockerfile
      cache_from:
        - python:3.10-slim
    image: graphrag:latest
    container_name: graphrag-app
    ports:
      - "127.0.0.1:8501:8501"  # Only bind to localhost for Nginx
    env_file:
      - .env  # Load ALL environment variables from .env file
    environment:
      # Override specific variables for container networking
      - NEO4J_URI=bolt://neo4j:7687
      - DATA_DIR=/app/data
      - CACHE_DIR=/app/cache
      - CHROMA_DB_PATH=/app/chroma_db
      - LOG_DIR=/app/logs
    volumes:
      - ./data:/app/data
      - ./cache:/app/cache  
      - ./chroma_db:/app/chroma_db
      - ./logs:/app/logs
      - ./sample_data:/app/sample_data:ro
      # Mount the Python files for hot reload during development
      - ./runtime_processor.py:/app/runtime_processor.py:ro
      - ./data_ingestion_pipeline.py:/app/data_ingestion_pipeline.py:ro
      - ./query_router_system.py:/app/query_router_system.py:ro
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - graphrag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 3000M
        reservations:
          memory: 2500M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local

networks:
  graphrag-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
        
# # GraphRAG Docker Compose Configuration
# # Complete version with all fixes

# services:
#   # Neo4j Database
#   neo4j:
#     image: neo4j:5.15-community
#     container_name: graphrag-neo4j
#     ports:
#       - "127.0.0.1:7474:7474"  # HTTP for browser
#       - "127.0.0.1:7687:7687"  # Bolt protocol
#     environment:
#       # Neo4j Authentication
#       - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-graphrag123}
#       - NEO4J_PLUGINS=["apoc"]
#       - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      
#       # Memory settings optimized
#       - NEO4J_server_memory_heap_initial__size=512m
#       - NEO4J_server_memory_heap_max__size=1024m
#       - NEO4J_server_memory_pagecache_size=1024m
      
#       # Configuration
#       - NEO4J_server_config_strict__validation_enabled=false
#       - NEO4J_db_transaction_timeout=30s
#       - NEO4J_db_lock_acquisition_timeout=10s
      
#       # Network configuration
#       - NEO4J_server_default__listen__address=0.0.0.0
      
#       # Advertised addresses for browser access
#       - NEO4J_server_bolt_advertised__address=:7687
#       - NEO4J_server_http_advertised__address=:7474
      
#       # CORS and browser settings
#       - NEO4J_browser_remote__content__hostname__whitelist=*
#       - NEO4J_browser_allow__outgoing__connections=true
      
#       # Connector settings
#       - NEO4J_server_bolt_enabled=true
#       - NEO4J_server_http_enabled=true
      
#     volumes:
#       - neo4j_data:/data
#       - neo4j_logs:/logs
#       - neo4j_import:/var/lib/neo4j/import
#       - neo4j_plugins:/plugins
#     networks:
#       - graphrag-network
#     restart: unless-stopped
#     healthcheck:
#       test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
#       interval: 30s
#       timeout: 10s
#       retries: 5
#       start_period: 40s
#     deploy:
#       resources:
#         limits:
#           memory: 2500M
#         reservations:
#           memory: 2000M
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "10m"
#         max-file: "3"

#   # GraphRAG Application
#   graphrag-app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#       cache_from:
#         - python:3.10-slim
#     image: graphrag:latest
#     container_name: graphrag-app
#     ports:
#       - "127.0.0.1:8501:8501"  # Only bind to localhost for Nginx
#     env_file:
#       - .env  # Load all environment variables from .env file
#     environment:
#       # Override specific variables if needed
#       - NEO4J_URI=bolt://neo4j:7687
#       - DATA_DIR=/app/data
#       - CACHE_DIR=/app/cache
#       - CHROMA_DB_PATH=/app/chroma_db
#       - LOG_DIR=/app/logs
#     volumes:
#       - ./data:/app/data
#       - ./cache:/app/cache  
#       - ./chroma_db:/app/chroma_db
#       - ./logs:/app/logs
#       - ./sample_data:/app/sample_data:ro
#     depends_on:
#       neo4j:
#         condition: service_healthy
#     networks:
#       - graphrag-network
#     restart: unless-stopped
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 60s
#     deploy:
#       resources:
#         limits:
#           memory: 3000M
#         reservations:
#           memory: 2500M
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "10m"
#         max-file: "3"

# volumes:
#   neo4j_data:
#     driver: local
#   neo4j_logs:
#     driver: local
#   neo4j_import:
#     driver: local
#   neo4j_plugins:
#     driver: local

# networks:
#   graphrag-network:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 172.28.0.0/16
        
# # # GraphRAG Docker Compose Configuration
# # # No version field as it's deprecated in Docker Compose V2

# # services:
# #   # Neo4j Database
# #   neo4j:
# #     image: neo4j:5.15-community
# #     container_name: graphrag-neo4j
# #     ports:
# #       - "127.0.0.1:7474:7474"  # Only bind to localhost for Nginx
# #       - "127.0.0.1:7687:7687"  # Only bind to localhost for security
# #     environment:
# #       # Neo4j Authentication - from .env
# #       - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
# #       - NEO4J_PLUGINS=["apoc"]
# #       - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      
# #       # Memory settings optimized
# #       - NEO4J_server_memory_heap_initial__size=512m
# #       - NEO4J_server_memory_heap_max__size=1024m
# #       - NEO4J_server_memory_pagecache_size=1024m
      
# #       # Configuration
# #       - NEO4J_server_config_strict__validation_enabled=false
# #       - NEO4J_db_transaction_timeout=30s
# #       - NEO4J_db_lock_acquisition_timeout=10s
      
# #       # Allow connections from Docker network
# #       - NEO4J_server_default__listen__address=0.0.0.0
# #       - NEO4J_server_bolt_advertised__address=localhost:7687
# #       - NEO4J_server_http_advertised__address=localhost:7474
# #     volumes:
# #       - neo4j_data:/data
# #       - neo4j_logs:/logs
# #       - neo4j_import:/var/lib/neo4j/import
# #       - neo4j_plugins:/plugins
# #     networks:
# #       - graphrag-network
# #     restart: unless-stopped
# #     healthcheck:
# #       test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
# #       interval: 30s
# #       timeout: 10s
# #       retries: 5
# #       start_period: 40s
# #     deploy:
# #       resources:
# #         limits:
# #           memory: 2500M
# #         reservations:
# #           memory: 2000M
# #     logging:
# #       driver: "json-file"
# #       options:
# #         max-size: "10m"
# #         max-file: "3"

# #   # GraphRAG Application
# #   graphrag-app:
# #     build:
# #       context: .
# #       dockerfile: Dockerfile
# #       cache_from:
# #         - python:3.10-slim
# #     image: graphrag:latest
# #     container_name: graphrag-app
# #     ports:
# #       - "127.0.0.1:8501:8501"  # Only bind to localhost for Nginx
# #     env_file:
# #       - .env  # Load all environment variables from .env file
# #     environment:
# #       # Override specific variables if needed
# #       - NEO4J_URI=bolt://neo4j:7687
# #       - DATA_DIR=/app/data
# #       - CACHE_DIR=/app/cache
# #       - CHROMA_DB_PATH=/app/chroma_db
# #       - LOG_DIR=/app/logs
# #     volumes:
# #       - ./data:/app/data
# #       - ./cache:/app/cache  
# #       - ./chroma_db:/app/chroma_db
# #       - ./logs:/app/logs
# #       - ./sample_data:/app/sample_data:ro
# #     depends_on:
# #       neo4j:
# #         condition: service_healthy
# #     networks:
# #       - graphrag-network
# #     restart: unless-stopped
# #     healthcheck:
# #       test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
# #       interval: 30s
# #       timeout: 10s
# #       retries: 3
# #       start_period: 60s
# #     deploy:
# #       resources:
# #         limits:
# #           memory: 3000M
# #         reservations:
# #           memory: 2500M
# #     logging:
# #       driver: "json-file"
# #       options:
# #         max-size: "10m"
# #         max-file: "3"

# # volumes:
# #   neo4j_data:
# #     driver: local
# #   neo4j_logs:
# #     driver: local
# #   neo4j_import:
# #     driver: local
# #   neo4j_plugins:
# #     driver: local

# # networks:
# #   graphrag-network:
# #     driver: bridge
# #     ipam:
# #       config:
# #         - subnet: 172.28.0.0/16